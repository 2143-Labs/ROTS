name: Game

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Disable action if label is present
        run: |
          EXITCODE=$( ${{ !contains(github.event.pull_request.labels.*.name, 'WIP') }} )
          if [ $EXITCODE -gt 0 ]; then
            echo '## Cancelling job because of WIP tag' >> $GITHUB_STEP_SUMMARY
          end
          exit $EXITCODE

  build:
    needs: [ setup ]
    if: needs.setup.outcome == 'success'
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
      CARGO_UNSTABLE_SPARSE_REGISTRY: "true"
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        rust: [nightly]
    steps:
    - uses: actions/checkout@v3

    - name: Run sccache-cache
      if: ${{ !github.event.act }}
      uses: mozilla-actions/sccache-action@v0.0.3

    - name: Install alsa
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libasound2-dev libudev-dev

    - run: cargo test --release --no-default-features
    - run: cargo build --release --no-default-features

    - name: Upload Executable
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}
        path: |
          target/release/client
          target/release/server
          target/release/client.exe
          target/release/server.exe
        retention-days: 2

  upload_assets_as_artifact:
    needs: [ setup ]
    if: needs.setup.outcome == 'success'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Upload Assets
      uses: actions/upload-artifact@v3
      with:
        name: assets
        path: |
          client/assets
          !client/assets/**/*.aseprite
        retention-days: 2

  create_release:
    runs-on: ubuntu-latest
    needs: [ build, upload_assets_as_artifact ]
    permissions:
      contents: write
    #outputs:
      #release_upload_url: ${{ steps.create_release.outputs.upload_url }}
      #release_tag_name: ${{ steps.create_release.outputs.tag_name }}
      #release_id: ${{ steps.create_release.outputs.id }}
      #release_node_id: ${{ steps.create_release.outputs.node_id }}
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3

    - name: Move artifacts
        #mv windows-latest/* .
        #rm windows-latest
      run: |
        bash -c "mv windows-latest/* . || true"
        bash -c "rm -rf windows-latest || true"
        bash -c "mv ubuntu-latest/* . || true"
        bash -c "rm -rf ubuntu-latest || true"
        bash -c "chmod +x client server || true"

    - name: Create Draft
      if: github.event_name == 'pull_request'
      id: create_release_draft
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: "PR: ${{github.event.pull_request.title}} (v ${{github.run_number}} )"
        draft: true
        prerelease: ${{ ! contains(github.event.pull_request.labels.*.name, 'ready') }}

    - name: Create Release
      if: github.event_name == 'push'
      id: create_release_real
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: "Release ${{github.run_number}}"
        draft: false
        prerelease: false

    - name: Create Zip
      uses: thedoctor0/zip-release@0.7.1
      with:
        type: 'zip'
        filename: 'release.zip'

    - name: Attach Executable to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_real && steps.create_release_real.outputs.upload_url || steps.create_release_draft.outputs.upload_url }}
        asset_path: release.zip
        asset_name: release.zip
        asset_content_type: application/octet-stream
